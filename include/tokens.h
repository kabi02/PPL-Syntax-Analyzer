#ifndef TOKENS_H
#define TOKENS_H

#define identifier '0'
#define int_keyword '1'
#define string_keyword '2'
#define decimal_keyword '3'
#define boolean_keyword '4'
#define char_keyword '5'
#define if_keyword '6'
#define else_keyword '7'
#define print_keyword '8'
#define read_keyword '9'
#define while_keyword 'a'
#define break_keyword 'b'
#define continue_keyword 'c'
#define return_keyword 'd'
#define proceed_keyword 'e'
#define length_keyword 'f'
#define free_reserved 'g'
#define exit_reserved 'h'
#define start_reserved 'i'
#define end_reserved 'j'
#define combine_reserved 'k'
#define int_const 'l'
#define dec_const 'm'
#define bool_const 'n'
#define char_const 'o'
#define str_const 'p'
#define To_noise 'q'
#define Addition_opr 'r'
#define Subtraction_opr 's'
#define Multiplication_opr 't'
#define Division_opr 'u'
#define IntegerDivision_opr 'v'
#define Equal_opr 'w'
#define ModuloDivision_opr 'x'
#define Exponent_opr 'y'
#define Increment_opr 'z'
#define Decrement_opr 'Y'
#define GreaterThan_opr 'A'
#define LessThan_opr 'B'
#define GreaterThanEqualTo_opr 'C'
#define LessThanEqualTo_opr 'D'
#define NotEqualTo_opr 'E'
#define LogicalAnd_opr 'F'
#define LogicalOr_opr 'G'
#define LogicalNot_opr 'H'
#define isEqualTo_opr 'I'
#define AdditionAssignment_opr 'J'
#define SubtractionAssignment_opr 'K'
#define MultiplicationAssignment_opr 'L'
#define DivisionAssignment_opr 'M'
#define IntegerDivisionAssignment_opr 'N'
#define ModuloDivisionAssignment_opr 'O'
#define ExponentAssignment_opr 'P'
#define SemiColon_delim 'Q'
#define Comma_delim 'R'
#define OpenCurlyBrace 'S'
#define CloseCurlyBrace 'T'
#define OpenParenthesis 'U'
#define CloseParenthesis 'V'
#define unrecognized 'W'
#define Of_noise 'X'

int next;

#endif
